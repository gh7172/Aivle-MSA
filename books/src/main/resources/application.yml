server:
  port: 8080

spring:
  application:
    name: books
  datasource:
    url: jdbc:h2:mem:booksdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
# 로컬 개발 환경용 프로퍼티
feign:
  client:
    pdf-generator:
      # pdf-generator 서비스를 실행할 포트 (예: 8092)
      url: http://localhost:8092
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: books
#<<< EDA / Topic Name
          destination: aivlemsa
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: aivlemsa
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---

spring:
  profiles: docker
  datasource:
    url: jdbc:h2:mem:booksdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: books
          destination: aivlemsa
          contentType: application/json
        event-out:
          destination: aivlemsa
          contentType: application/json

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
feign:
  client:
    pdf-generator:
      # Docker Compose나 Kubernetes에서 사용할 서비스 이름
      url: http://pdf-generator:8080

